version: '3.8'

services:

  traefik:
    container_name: gitlab_traefik
    restart: unless-stopped
    image: traefik:v1.7
    command: --configFile=/var/traefik/traefik.toml
    ports:
      - "80:80"
    networks:
      - traefik_todo_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/var/traefik/traefik.toml:ro
      - /srv/docker/volumes/traefik/log:/log

  db:
    image: postgres:15.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - todo_net
    volumes:
      - postgres_data:/var/lib/postgresql/data

  run_migrations:
    image: ${DOCKERHUB_USER}/diplom:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate
    networks:
      - todo_net

  bot:
    image: ${DOCKERHUB_USER}/diplom:latest
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      run_migrations:
        condition: service_completed_successfully
    command: python manage.py runbot
    networks:
      - todo_net

  api:
    image: ${DOCKERHUB_USER}/diplom:latest
    env_file: .env
    depends_on:
      run_migrations:
        condition: service_completed_successfully
    networks:
      - todo_net

  collect_static:
    image: ${DOCKERHUB_USER}/diplom:latest
    env_file: .env
    command: python manage.py collectstatic -c --no-input
    volumes:
      - django_static:/opt/app/static/

  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: on-failure
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    networks:
      - todo_net
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.port=80"
      - "traefik.frontend.backend=frontend"
      - "traefik.frontend.frontend.rule=Host:ulinad.ru"
      - "traefik.frontend.frontend.entryPoints=http"
      - "traefik.docker.network=frontend_traefik_todo_net"

networks:
  traefik_todo_net:
  todo_net:


volumes:
  postgres_data:
  django_static:
